name: publish

on:
    workflow_dispatch:
    release:
        types: [released]

env:
    SIGNING_KEY_RING_FILE: "${RUNNER_TEMP}key.gpg"

jobs:
    publish:
        name: Release build and publish
        runs-on: macos-latest
        steps:
            - name: Check out code
              uses: actions/checkout@v2

            - name: Set up JDK 17
              uses: actions/setup-java@v1
              with:
                  java-version: 17

            # Update Unreleased section with the current release notes
            - name: Patch Changelog
              run: |
                  ./gradlew patchChangelog --release-note="`cat << EOM
                  ${{ github.event.release.body }}
                  EOM`"

            # Setup aar signing
            - name: Create binary keyring
              env:
                  GPG_KEY_CONTENTS: ${{ secrets.SONATYPE_BASE64_SIGNING_KEY }}
              run: |
                  git fetch --unshallow
                  sudo bash -c "echo '$GPG_KEY_CONTENTS' | base64 -d > '$SIGNING_KEY_RING_FILE'"

            # Build and run all tests. This ensures all artifacts are built.
            - name: Build & Test
              run: ./gradlew build

            # Publish aar to maven central via sonatype repository
            - name: Publish to MavenCentral
              run: ./gradlew -PmavenCentralUsername=${{ secrets.OSSRH_USERNAME }} -PmavenCentralPassword="${{ secrets.OSSRH_PASSWORD }}" -Psigning.keyId=${{ secrets.SONATYPE_SIGNING_KEY_ID }} -Psigning.password="${{ secrets.SONATYPE_SIGNING_KEY_PASSWORD }}" -Psigning.secretKeyRingFile="$SIGNING_KEY_RING_FILE" --no-parallel --no-daemon publishAndroidReleasePublicationToMavenCentralRepository closeAndReleaseRepository

            # Prepare assets for archive
            - name: Zip XCFramework
              run: |
                pushd ./build/XCFrameworks/release
                zip -r FaithlifeOAuth.xcframework.zip FaithlifeOAuth.xcframework
                popd

            # Prepare Swift Package Manager
            - name: Fixup Swift Package settings
              run: |
                export PACKAGE_CHECKSUM=$(swift package compute-checksum ./build/XCFrameworks/release/FaithlifeOAuth.xcframework.zip)
                export PACKAGE_VERSION="${{ github.event.release.tag_name }}"
                envsubst < Package.swift.template > Package.swift

            - name: Commit Swift Package changes
              uses: EndBug/add-and-commit@v7
              with:
                message: 'update Swift package checksum'
                add: 'Package.swift'
                tag: '${{ github.event.release.tag_name }} --force'

            # Upload artifact as a release asset
            - name: Upload Release Asset
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: gh release upload ${{ github.event.release.tag_name }} ./build/XCFrameworks/release/FaithlifeOAuth.xcframework.zip

            # Create pull request
            - name: Create Pull Request
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  VERSION="${{ github.event.release.tag_name }}"
                  BRANCH="changelog-update-$VERSION"
                  git config user.email "action@github.com"
                  git config user.name "GitHub Action"
                  git checkout -b $BRANCH
                  git commit -am "Changelog update - $VERSION"
                  git push --set-upstream origin $BRANCH
                  gh pr create \
                    --title "Changelog update - \`$VERSION\`" \
                    --body "Patch changelog for \`$VERSION\`." \
                    --base master \
                    --head $BRANCH
